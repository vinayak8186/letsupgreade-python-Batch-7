# -*- coding: utf-8 -*-
"""Assignment-1_Day2_Batch7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DksYtJkZLBzId1AL0WrptAhS80q-13eH
"""

# Question 1. List and its default functions.
animals = ['cat','dog','rabbit']

# a) append function
animals.append('pig')
print (animals)

# b) count function
count=animals.count('dog')
print ('count of dog is:',count)

# c) insert function
animals.insert(3,'monkey')
print (animals)

# d) index function
index= animals.index('pig')
print ('index of pig is:',index)

# e) reverse function
print ('original list is: ', animals)
animals.reverse()
print ('reverse list is:', animals)

# f) extend function
animals2 = ['tiger','lion','mouse']
animals.extend(animals2)
print ('Extended list is:', animals)

# g) copy function
animalcopy = animals.copy()
print ('copied list is :', animalcopy)

# h) pop function
popped_item = animals.pop(3)
print ('popped item is:', popped_item)
print ('List after popping item :', animals)

# i) remove function
animals.remove('mouse')
print ('list after removing item:', animals)

# j) clear function
animals.clear()
print ('List after clearing items:', animals)


#Question no 2. Dictionary and its default functions.
person = {'name': 'xyz', 'age': 22, 'salary': 3500.0}

#a) items function
print(person.items())

#b) get function
print('name of person is:', person.get('name'))

#c) keys function
print(person.keys())

#d) copy function
newdict = person.copy()
print('Orignal dictionary: ', person)
print('New dictionary: ', newdict)

#e) setdefault function
department= person.setdefault('department', 'production')
print('person = ', person)
print('department = ', department)

#f) update function
d1 = {
    'eid': 123
    }
person.update(d1)
print(person)

#g) pop function
element = person.pop('eid')
print('The popped element is:', element)
print('The dictionary is:', person)

#h) popitem function
result = person.popitem()
print('Return Value = ', result)
print('person = ', person)

#i) fromkeys function
keys = {'name', 'age', 'salary'}
value = 'unknown'
d2 = dict.fromkeys(keys,value)
print ('d2 dictionary is: ', d2)

#k) Clear function
d2.clear()
print ('now d2 dictionary is:', d2)


#Question no 3. Sets and its default functions.

my_set = {1, 3, 4, 5, 6}
print(my_set)
#1) Removing elements from a set
# A particular item can be removed from a set using the methods discard() and remove().
#a) There are two methods for removing the element
#i) discard():-
my_set.discard(4)
print(my_set)

#ii) remove():-
my_set.remove(6)
print(my_set)

#b) pop() method
my_set = set("HelloWorld")
print(my_set)

print(my_set.pop())

#c)  clear() method
my_set.clear()
print(my_set)

# 2) Add element in set 
my_set = {1, 3}
print(my_set)

# add() method:-
my_set.add(2)
print(my_set)

#3) Set operation
# i) Union
A = {1, 2, 3, 4, 5}
B = {4, 5, 6, 7, 8}
print(A | B)

# ii) Intersection
A = {1, 2, 3, 4, 5}
B = {4, 5, 6, 7, 8}
print(A & B)


#Question no 4. Tuple and explore default methods.
# i) Tuple
my_tuple = (1, 2, 3)      #original tuple
print(my_tuple)

# ii) Indexing method
my_tuple = ('p','e','r','m','i','t')

print(my_tuple[0])    
print(my_tuple[5])   

# iii) Negative Indexing method
my_tuple = ('p', 'e', 'r', 'm', 'i', 't')

print(my_tuple[-1])
print(my_tuple[-6])

# iv) Slicing method
my_tuple = ('p','r','o','g','r','a','m','i','z')

# print elements 2nd to 4th
print(my_tuple[1:4])

# elements beginning to 2nd
print(my_tuple[:-7])

# elements 8th to end
print(my_tuple[7:])

# elements beginning to end
print(my_tuple[:])

# v) Deleting a Tuple
my_tuple = ('p', 'r', 'o', 'g', 'r', 'a', 'm', 'i', 'z')

# Can delete an entire tuple
del my_tuple

# vi) Tuple Method
my_tuple = ('a', 'p', 'p', 'l', 'e',)

print(my_tuple.count('p'))  
print(my_tuple.index('l'))  

# vii) Other Tuple Operations
# using the keyword "in":-
my_tuple = ('a', 'p', 'p', 'l', 'e',)

# a)In operation
print('a' in my_tuple)
print('b' in my_tuple)

# b) Not in operation
print('g' not in my_tuple)

# viii) for loop to iterate through each item in a tuple:-
for name in ('John', 'Kate'):
    print("Hello", name)


# Question no 5. Strings and explore default methods.
#a) Python String Capitalize() method
string = "welcome to Python World"

capitalized_string = string.capitalize()

print('Old String: ', string)
print('Capitalized String:', capitalized_string)

#b) Python String center() method 

string = "Python is awesome"

new_string = string.center(24)

print("Centered String: ", new_string)

#c) Python String Casefold() method
string = "PYTHON IS AWESOME"
# print lowercase string
print("Lowercase string:", string.casefold())

#d) Python String Count() method
statement = "Python is awesome, isn't it?"
substring = "is"
count = statement.count(substring)
print("The count is:", count)

#e). Python string find() method
statement1 = 'Let it be, let it be, let it be'

# i) first occurance of 'let it'(case sensitive)
result = statement1.find('let it')
print("Substring 'let it':", result)

# ii) How to use find()
if (statement1.find('be,') != -1):
    print("Contains substring 'be,'")
else:
    print("Doesn't contain substring")

#f) Python String islower() method
sentence1 = 'this is good'
print(sentence1.islower())

sentence1 = 'this is Not good'
print(sentence1.islower())